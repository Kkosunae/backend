openapi: 3.0.0
info:
  title: Kkosunae API
  description: |
    Node.js API Server for Kkosunae
  version: 1.0.0
  contact:
    name: Kkosunae
    url: https://www.notion.so/Kkosunae-6721af7dab564435b1396f4d96143592
    email: thdnjs3596@gmail.com
servers:
  - url: http://ec2-3-38-213-35.ap-northeast-2.compute.amazonaws.com:8080/
    description: Local server
  - url: http://127.0.0.1:8080/
    description: Local server

paths:
  /health_check:
    get:
        tags: 
            - health_check
        summary: health_check
        description: health_check
        responses:
            '200':
                description: OK
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: OK
  /user/kakao:
    post:
        tags: 
            - user
        summary: 카카오 로그인, 회원가입
        description: 파라미터가 accessToken 인 post api으로 jwt 토큰을 반환한다.
        requestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            accessToken:
                                type: string
                                example: "accessToken"
        responses:
            '200':
                description: 성공
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                type:
                                    type: string
                                    example: "login or register"
                                jwt:
                                    required: false
                                    type: string
                                    example: "이미 있는 회원일 땐 jwt 반환"
                                social_login_id:
                                    required: false
                                    type: int
                                    example: "없는 회원일 땐 소셜로그인 데이터를 저장한 id 반환"
            '401':
                description: "accessToken 이 유효하지 않을 때"
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                error:
                                    type: string
                                    example: "유효하지 않은 토큰입니다."
  /user/google:
    post:
        tags: 
            - user
        summary: 구글 로그인, 회원가입
        description: 파라미터가 accessToken 인 post api으로 jwt 토큰을 반환한다.
        requestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            accessToken:
                                type: string
                                example: "accessToken"
        responses:
            '200':
                description: 성공
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                type:
                                    type: string
                                    example: "login or register"
                                jwt:
                                    type: string
                                    example: "123456789"
                                user_id:
                                    type: int
                                    example: 1
            '401':
                description: "accessToken 이 유효하지 않을 때"
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                error:
                                    type: string
                                    example: "유효하지 않은 토큰입니다."
  /user/join:
    post:
        tags: 
            - user
        summary: 회원가입
        description: 파라미터가 socialLoginId, birthday, gender 인 post api로 회원가입을 한다.
        requestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            social_login_id:
                                type: string
                                example: ""
                            birthday:
                                type: string
                                example: "19981026"
                            gender:
                                type: string
                                example: "W"
        responses:
            '200':
                description: 성공
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                type:
                                    type: string
                                    example: "register"
                                jwt:
                                    type: string
                                    example: "123456789"
                                user_id:
                                    type: int
                                    example: 1
            '409':
                description: "이미 존재하는 이메일일 때"
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                error:
                                    type: string
                                    example: "이미 존재하는 이메일입니다."
  /user/follow:
    post:
        tags:
            - user
        summary: 팔로우
        description: body에 folloingId 받고, header 에 jwt 토큰 받는 API
        parameters:
              - name: Authorization
                in: header
                description: JWT 토큰 (Bearer 방식)
                required: true
                type: string
                schema:
                    type: string
                example: Bearer your_jwt_token_here
        requestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            followingId:
                                type: integer
                                example: 1
        requestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            followingId:
                                type: int
                                example: 1
        responses:
            '200':
                description: 성공
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "팔로우 성공"
  /user/unfollow:
    delete:
        tags:
            - user
        summary: 팔로우
        description: body에 folloingId 받고, header 에 jwt 토큰 받는 API
        parameters:
            - in: header
              name: Authorization
              description: JWT 토큰 (Bearer 방식)
              required: true
              schema:
                  type: string
              example: Bearer <your_jwt_token_here>

        requestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            followingId:
                                type: int
                                example: 1
        responses:
            '200':
                description: 성공
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "팔로우 성공"
     
